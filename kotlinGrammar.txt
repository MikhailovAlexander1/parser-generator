@
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Tree {
    private final String node;
    private final List<Tree> children;

    public Tree(final String node, final Tree... children) {
        this.node = node;
        this.children = new ArrayList<>(Arrays.asList(children));
    }

    public Tree(final String node) {
        this.node = node;
        this.children = new ArrayList<>();
    }

    public void addChild(final Tree child) {
        this.children.add(child);
    }

    public String getNode() {
        return node;
    }

    public List<Tree> getChildren() {
        return children;
    }
}
@

NAME : /[a-zA-Z][a-zA-Z0-9]*/;
VAR : 'var';
COLON : ':';
SEMICOLON : ';';
COMMA : ',';
LESS : '<';
GREATER : '>';
AMP: '&';

e [Tree tree]
	: v COLON a SEMICOLON {$tree = new Tree("e", v, new Tree(":"), a, new Tree(";"));}
	| NONE {$tree = new Tree("e", new Tree("ε"));}
	;

v [Tree tree]
	: {tree = new Tree("v", new Tree($la.curString.toString()));} VAR {tree.addChild(new Tree($la.curString.toString()));} NAME
	;

a [Tree tree]
	: t at {$tree = new Tree("a", t, at);}
	;

at [Tree tree]
	: LESS tt atcont GREATER {$tree = new Tree("at", new Tree("<"), tt, atcont, new Tree(">"));}
	;

atcont [Tree tree]
	: COMMA tt atcont {$tree = new Tree("atcont", new Tree(","), tt, atcont);}
	| NONE {$tree = new Tree("atcont", new Tree("ε"));}
	;

tt [Tree tree]
	: t ttt ampt {$tree = new Tree("tt", t, ttt, ampt);}
	;

ampt [Tree tree]
	: AMP tt {$tree = new Tree("ampt", new Tree("&"), tt);}
	| NONE {$tree = new Tree("ampt", new Tree("ε"));}
	;

ttt [Tree tree]
	: at {$tree = new Tree("ttt", at);}
	| NONE {$tree = new Tree("ttt", new Tree("ε"));}
	;

t [Tree tree]
	: {tree = new Tree($la.curString.toString());} NAME
	;
